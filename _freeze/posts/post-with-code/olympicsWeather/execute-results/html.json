{
  "hash": "058de59f7b6a16313c81c1c908181268",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"olympicsWeather\"\nauthor: \"Paul Nestour\"\ndate: \"2024-03-16\"\ncategories: [package R]\nimage: \"image.jpeg\"\n---\n\n\n## Librairie olympicsWeather\n\nLa librairie olympicsWeather fournit des fonctionnalités pour accéder aux données de prévisions météorologiques en fonction des coordonnées géographiques ou des adresses. Avant d'utiliser la librairie, vous devez l'installer. Voici les étapes pour installer la librairie en utilisant le package remotes depuis GitHub.\n\n### Chargement du package\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Installer le package remotes s'il n'est pas déjà installé\n\ninstall.packages(\"remotes\")\n\n# Charger le package remotes\nlibrary(remotes)\n\n# Installer le package olympicsWeather depuis GitHub\nremotes::install_github(\"paulnest/olympicsWeather\")\n\n# Charger la librairie\nlibrary(olympicsWeather)\n```\n:::\n\n\n### Quelques exemples de prévisions Météo\n\n#### Quelles sont les prévisions météo à 7 jours pour le stade de France ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nolympicsWeather::get_forecast(\"Stade de France\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPassing 1 address to the Nominatim single address geocoder\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nQuery completed in: 1 seconds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `time`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `temperature_2m`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `apparent_temperature`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `precipitation_probability`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `precipitation`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 0\n```\n\n\n:::\n:::\n\n\n#### Pour Tahiti ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nolympicsWeather::get_forecast(\"Tahiti\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nPassing 1 address to the Nominatim single address geocoder\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nQuery completed in: 1 seconds\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `time`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `temperature_2m`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `apparent_temperature`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `precipitation_probability`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `precipitation`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 0\n```\n\n\n:::\n:::\n\n\n#### Pour les coordonnées gps 43.276703, 5.334791 (Marseille) ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nolympicsWeather::get_forecast(c(43.276703, 5.334791))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `time`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `temperature_2m`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `apparent_temperature`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `precipitation_probability`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Unknown or uninitialised column: `precipitation`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 0\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}